#pragma once

typedef enum Direction
{
	DIR_NONE,
	LEFT = 1,
	RIGHT = 2,
	TOP = 3,
	BOTTOM = 4,

	DIR_END
}DIR;

//Obj 타입
typedef enum OBJID
{
	OBJ_NONE,
	EFFECT,
	ENEMY,
	PLAYER,
	EFFECT2,
	BULLET,
	LASER,
	ITEM,
	BOSS,
	BLOODMOVE,
	WALL,
	GRABWALL,
	HEAD,
	FAN,
	LASEROBJECT,
	OBJ_TYPE_END
}OBJ_TYPE;

typedef enum ENEMYID
{
	ARM_ENEMY,
	GUN_ENEMY,
	ENEMY_TYPE_END
}ENEMY_TYPE;

//Obj 상태
typedef enum OBJSTATE
{
	IDLE,
	IDLE_TO_RUN,
	WALK,
	RUN,
	RUN_TO_IDLE,
	ATTACK,
	ATTACK_WALL,
	FALL_ATTACK,
	JUMP,
	ROLL,
	ROLLSTART,
	FALL,
	GRAB_WALL,
	JUMP_WALL,
	FALL_WALL,
	HURT,
	HURTFLY,
	HURTGROUND,
	DOORBREAK,
	DEAD,
	INIT,

	//FAN
	FAN_ON,
	//LASEROBJECT
	LASEROBJECT_ON,
	LASEROBJECT_OFF,

	//보스 STATE
	BOSS_IDLE,
	
	BOSS_PREJUMP,
	BOSS_JUMP,
	BOSS_LAND,
	BOSS_ROLL,
	
	BOSS_PREDASH,
	BOSS_DASH,
	BOSS_DASHEND,
	
	BOSS_DEAD,
	BOSS_DIEFLY,
	BOSS_DIEGROUND,
	BOSS_NOHEAD,
	BOSS_NOHEAD_STOP,

	///Head State///
	BOSS_HEADFLY,
	BOSS_HEADGROUND,
	BOSS_HEADGROUND_STOP,
	////////////////
	
	BOSS_AIM_MOVE,
	BOSS_AIM_STOP,
	
	BOSS_DRAWGUN,
	BOSS_HURTRECOVER,
	BOSS_HURTRECOVER_FADE,
	
	BOSS_PATTERN_IN,
	BOSS_PATTERN_OUT,
	
	BOSS_SWEEP_IN,
	BOSS_SWEEP_OUT,
	BOSS_SWEEP_NONFADE,
	BOSS_SWEEP_FADE,
	
	BOSS_TAKEOUTGUN,
	BOSS_SHOOT,
	
	BOSS_TELEPORT_IN,
	BOSS_TELEPORT,
	BOSS_TELEPORT_GROUND,
	BOSS_TELEPORT_OUT,
	BOSS_CLOAKING,
	
	BOSS_WALLGRAB,
	BOSS_WALLJUMP,
	BOSS_WALLJUMP_FALL,

	//레이저 STATE
	LASER_AIM,
	LASER_GROUND,
	LASER_GROUND_HALF,
	LASER_GROUND_STOP,

	//PLAYER EFFECT
	PLAYER_EFFECT_HIT,
	PLAYER_EFFECT_SLASH,
	PLAYER_EFFECT_RUNDUST,
	PLAER_EFFECT_JUMPDUST,
	PLAYER_EFFECT_LANDDUST,
	PLAYER_EFFECT_REFLECT,

	//BLOOD EFFECT
	BLOOD_EFFECT_0,
	BLOOD_EFFECT_1,
	BLOOD_EFFECT_2,
	BLOOD_EFFECT_3,
	BLOOD_EFFECT_4,
	BLOOD_EFFECT_5,
	BLOOD_EFFECT_6,
	BLOOD_EFFECT_7,
	BLOOD_EFFECT_8,
	BLOOD_EFFECT_MOVE,
	BLOOD_EFFECT_ONE,

	//BOMB EFFECT
	BOMB_EXPLOSION,
	GUN_FIRE,

	OBJ_STATE_END

}OBJ_STATE;

typedef enum LASERTYPE
{
	LASER_SHORT,
	LASER_LONG,
	LASER_FOLLOW,

	LASER_TYPE_END
}LASER_TYPE;



//충돌체 타입
typedef enum COLLIDERTYPE
{
	RECTANGLE,
	ELLIPSE,

	COLLIDER_TYPE_END
}COLLIDER_TYPE;


typedef enum ITEMTYPE
{
	ITEM_NONE,
	SWORD,
	OILBOTTLE,
	
	ITEM_END
}ITEM_TYPE;

static wstring ItemType[] =
{
	L"DEFAULT",
	L"SWORD",
	L"OILBOTTLE"
};



enum CHANNELID 
{
	SOUND_FOOTSTEP,
	SOUND_PLAYER,
	SOUND_PLAYER2,
	SOUND_PLAYER3,
	SOUND_PLAYER4,
	SOUND_PLAYER5,
	SOUND_BOSS,
	SOUND_BOSS2,
	SOUND_BOSS3,
	SOUND_BOSS4,
	SOUND_BOSS5,
	SOUND_BOSS6,
	SOUND_BOSS7,
	SOUND_SLOW,
	SOUND_EFFECT,
	SOUND_EFFECT2,
	SOUND_ARMENEMY,
	SOUND_ARMENEMY2,
	SOUND_GUNENEMY,
	SOUND_GUNENEMY2,
	SOUND_EXPLOSION,
	SOUND_EXPLOSION2,
	SOUND_EXPLOSION3,
	SOUND_REWIND,
	SOUND_BGM,
	MAXCHANNEL 
};

